#!/bin/bash
# Copyright (C) 2000-2020 Synology Inc. All rights reserved.

### Use PKG_DIR as working directory.
PKG_DIR=/tmp/_test_spk
rm -rf $PKG_DIR
mkdir -p $PKG_DIR

### get spk packing functions
source /pkgscripts/include/pkg_util.sh

create_package_tgz() {
	local firewere_version=
	local package_tgz_dir=/tmp/_package_tgz
	local binary_dir=$package_tgz_dir/usr/local/bin

	pwd
	ls -l

	### clear destination directory
	rm -rf $package_tgz_dir && mkdir -p $package_tgz_dir

	### install needed file into PKG_DIR
	unzip -q -d "${package_tgz_dir}" "duplicati.zip"
	status=$?
	echo "Unzip status ${status}"
	echo "Zip size $(du -h duplicati.zip)"
	echo "Unzip size $(du -hs ${package_tgz_dir})"
	ls /tmp/_package_tgz
	#mkdir -p $binary_dir
	# mkdir "WIZARD_UIFILES" # Not used, but need to exist

	# Install extra items for Synology
	cp -av web-extra/* $package_tgz_dir/webroot/
	
	# Remove items unused on the Synology platform
	rm -rf $package_tgz_dir/win-tools
	rm -rf $package_tgz_dir/SQLite/win64
	rm -rf $package_tgz_dir/SQLite/win32
	rm -rf $package_tgz_dir/MonoMac.dll
	rm -rf $package_tgz_dir/OSX\ Icons
	rm -rf $package_tgz_dir/OSXTrayHost
	rm -rf $package_tgz_dir/licenses/MonoMac
	rm -rf $package_tgz_dir/licenses/gpg
	rm -rf $package_tgz_dir/win-x64/storj_uplink.dll
	rm -rf $package_tgz_dir/win-x86/storj_uplink.dll
	rm -rf $package_tgz_dir/storj_uplink.dll
	rm -rf $package_tgz_dir/libstorj_uplink.dylib

  echo "package.tgz final size $(du -hs ${package_tgz_dir})"
	### create package.tgz $1: source_dir $2: dest_dir
	pkg_make_package $package_tgz_dir "${PKG_DIR}"
}

create_spk(){

	cp -av scripts $PKG_DIR/scripts
	cp -av PACKAGE_ICON*.PNG $PKG_DIR
	cp -av WIZARD_UIFILES $PKG_DIR
	cp -av conf $PKG_DIR
	cp -av ui $PKG_DIR
	cp -av LICENSE $PKG_DIR

	./INFO.sh > INFO
	# echo "version=\"$(cat VERSION)\"" >> INFO
	# echo "version=\"2.0.6-0001\"" >> INFO
	cp INFO $PKG_DIR/INFO

	### Create the final spk.
	# pkg_make_spk <source path> <dest path> <spk file name>
	# Please put the result spk into /image/packages
	# spk name functions: pkg_get_spk_name pkg_get_spk_unified_name pkg_get_spk_family_name
	mkdir -p /image/packages
	pkg_make_spk ${PKG_DIR} "/image/packages" $(pkg_get_spk_family_name)
}

main() {
	create_package_tgz
	create_spk
}

main "$@"
